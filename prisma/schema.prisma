// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  name  String @unique
  role  String
  flows Flow[]
}

model Flow {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  user        User          @relation(fields: [userId], references: [id])
  userId      Int
  edges       FlowEdgeMap[]
  core        Core?         @relation(fields: [coreId], references: [id], onDelete: Cascade)
  coreId      Int?
  dashboard   Dashboard?    @relation(fields: [dashboardId], references: [id], onDelete: Cascade)
  dashboardId Int?
  createdAt   DateTime      @default(now()) @map(name: "created_at")
}

model FlowEdgeMap {
  flow       Flow     @relation(fields: [flowId], references: [id])
  flowId     Int
  edge       Edge     @relation(fields: [edgeId], references: [id])
  edgeId     Int
  assignedAt DateTime @default(now())

  @@id([flowId, edgeId])
}

model Edge {
  id          Int           @id @default(autoincrement())
  type        String        @default("Nodered")
  description String?
  url         String
  belongsTo   FlowEdgeMap[]
}

model Core {
  id        Int     @id @default(autoincrement())
  mqttUrl   String  @map(name: "mqtt_url")
  tsdbUrl   String  @map(name: "tsdb_url")
  s3Url     String? @map(name: "s3_url")
  belongsTo Flow[]
}

model Dashboard {
  id         Int     @id @default(autoincrement())
  grafanaUrl String  @map(name: "grafana_url")
  odmUrl     String? @map(name: "odm_url")
  biUrl      String? @map(name: "bi_url")
  belongsTo  Flow[]
}
